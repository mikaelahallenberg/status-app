{"version":3,"sources":["services/path-service.js","services/status-service.js","actions/status-action.js","reducers/status-reducer.js","components/status-component.js","views/status-view.js","components/error.js","App.js","index.js"],"names":["getPath","path","url","statusPaths","filter","statusPath","name","StatusService","items","provider","statuses","fetch","response","status","Error","json","components","forEach","item","id","push","fetchStart","type","fetchError","error","handleResult","dispatch","request","a","data","getDataInIntervals","m","Promise","resolve","setTimeout","updateStatus","statusService","dataDog","getStatusFromDatadog","azure","getStatusFromAzure","fetchStatuses","console","log","initialStatus","Container","styled","div","Complete","span","Pending","StatusName","Subheading","h3","SecondHeading","h2","Operational","ServiceDown","StatusComponent","pending","map","i","key","section","Wrapper","Heading","h1","StatusView","this","props","Component","defaultProps","connect","state","ErrorBoundary","hasError","setState","message","children","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","updatedData","concat","updatedIndex","findIndex","index","newStatuses","slice","applyMiddleware","thunk","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13a4943c.chunk.js","sourcesContent":["import statusPaths from '../services/status-paths';\n\nexport const getPath = (path) => {\n    const url = statusPaths.filter(statusPath => {\n      return statusPath.name === path;\n    });\n    return url[0] ? url[0].url : null;\n  }\n\n\nexport default getPath;","import getPath from '../services/path-service';\n\nclass StatusService {\n\n  async getStatusFromDatadog() {\n    let items = { provider: \"DataDog\", statuses: [] };\n\n    const response = await fetch(getPath('DataDog'))\n    if (response.status !== 200) {\n      throw new Error(`There was a problem, code: ${response.status}`);\n    }\n\n    const data = await response.json()\n    \n    data.components.forEach(item => {\n      if (item.id === \"s6jxgrkjjj6p\" || item.id === \"xfqwlt66k1xg\") {\n        items.statuses.push({\n          name: item.name,\n          status: item.status\n        })\n      }\n    })\n    \n    return items\n  }\n\n\n  async getStatusFromAzure() {\n\n    let items = { provider: \"Azure\", statuses: [] };\n\n    const response = await fetch(getPath('Azure'))\n    if (response.status !== 200) {\n      throw new Error(`There was a problem, code: ${response.status}`);\n    }\n\n    const data = await response.json()\n    \n    data.components.forEach(item => {\n      if (item.id === \"s6jxgrkjjj6p\" || item.id === \"xfqwlt66k1xg\") {\n        items.statuses.push({\n          name: item.name,\n          status: item.status\n        })\n      }\n    })\n\n    return items\n\n  }\n}\n\nexport default StatusService;\n","import StatusService from \"../services/status-service\";\n\nexport const FETCH_ERROR = \"@fetch/error\";\nexport const FETCH_SUCCESS = \"@fetch/success\";\nexport const FETCH_START = \"@fetch/start\";\n\nconst fetchStart = provider => ({\n  type: FETCH_START,\n  provider: provider\n});\n\nconst fetchError = error => ({\n  type: FETCH_ERROR,\n  error\n});\n\nconst fetchSuccess = data => ({\n  type: FETCH_SUCCESS,\n  data\n});\n\nconst handleResult = async (dispatch, request) => {\n  try {\n    const items = await request;\n    dispatch(fetchSuccess(items));\n  } catch (err) {\n    dispatch(fetchError(err));\n  }\n};\n\nconst getDataInIntervals = m => new Promise(resolve => setTimeout(resolve, m))\n\nconst updateStatus = (dispatch) => {\n  const statusService = new StatusService();\n  const dataDog = statusService.getStatusFromDatadog();\n  const azure = statusService.getStatusFromAzure();\n  handleResult(dispatch, dataDog);\n  handleResult(dispatch, azure);\n}\n\nexport const fetchStatuses = () => async dispatch => {\n  dispatch(fetchStart(\"DataDog\"));\n  dispatch(fetchStart(\"Azure\"));\n  while(true) {\n    console.log()\n    updateStatus(dispatch);\n    await getDataInIntervals(600000)\n  }\n\n};\n\nexport default fetchStatuses;\n","import {\n  FETCH_ERROR,\n  FETCH_SUCCESS,\n  FETCH_START\n} from \"../actions/status-action\";\n\nconst initialStatus = {\n  data: []\n};\n\nexport default (state = initialStatus, action) => {\n  switch (action.type) {\n    case FETCH_START: {\n      const data = {\n        provider: action.provider,\n        pending: true,\n        statuses: [],\n      };\n      const updatedData = state.data.concat(data);\n      return {\n        ...state,\n        data: updatedData\n      };\n    }\n\n    case FETCH_ERROR: {\n      return {\n        ...state,\n        error: action.error\n      };\n    }\n    case FETCH_SUCCESS: {\n      const updatedIndex = state.data.findIndex(item => {\n        return item.provider === action.data.provider;\n      });\n      const updatedData = state.data.map((item, index) => {\n        if (index === updatedIndex) {\n          const newStatuses = action.data.statuses.slice()\n          return {\n            provider: action.data.provider,\n            pending: false,\n            statuses: newStatuses,\n          };\n        }\n        return item;\n      });\n\n      return {\n        ...state,\n        data: updatedData\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { arrayOf, shape, string, bool } from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: block;\n`;\n\nconst Complete = styled.span`\n  animation: appearingText 0.6s ease-in;\n  color: #37cc2d;\n  @keyframes appearingText {\n    0% {\n      color: transparent;\n    }\n    100% {\n      color: #37cc2d;\n    }\n  }\n`;\n\nconst Pending = styled.span`\ncolor: #f0dd65;\n}\n`;\nconst StatusName = styled.span`\n  color: #757575;\n`;\n\nconst Subheading = styled.h3`\n  text-transform: uppercase;\n  margin-top: 1.5em;\n  font-size: 1em;\n`;\n\nconst SecondHeading = styled.h2`\n  text-transform: uppercase;\n  font-size: 1.2em;\n`;\nconst Operational = styled.span`\n  animation: appearingText 0.6s ease-in;\n  color: #37cc2d;\n  @keyframes appearingText {\n    0% {\n      color: transparent;\n    }\n    100% {\n      color: #37cc2d;\n    }\n  }\n`;\n\nconst ServiceDown = styled.span`\nanimation: appearingText 0.6s ease-in;\ncolor: #d94514;\n@keyframes appearingText {\n  0% {\n    color: transparent;\n  }\n  100% {\n    color: #d94514;\n  }\n}\n`;\n\n\nconst StatusComponent = data => {\n\n  return (\n    <Container>\n      <SecondHeading>\n        {data.provider}\n      </SecondHeading>\n      <Container>\n        <StatusName>\n          call status:\n          {data.pending ? (\n            <Pending> pending</Pending>\n          ) : (\n            <Complete> complete</Complete>\n          )}\n        </StatusName>\n      </Container>\n      <Container>\n        <Subheading>Statuses</Subheading>\n        {data.statuses.map((item, i) => {\n          return (\n            <Container key={i}>\n              <StatusName>{item.name}:</StatusName>\n              {item.status ? (\n                <Operational> operational</Operational>\n              ) : (\n                <ServiceDown> service down</ServiceDown>\n              )}\n            </Container>\n          );\n        })}\n      </Container>\n      <Container>\n        <StatusName>\n        </StatusName>\n      </Container>\n    </Container>\n  );\n};\n\nStatusComponent.propTypes = {\n  data: arrayOf(\n    shape({\n      provider: string,\n      statuses: arrayOf(\n        shape({\n          name: string,\n          status: bool\n        })\n      )\n    })\n  )\n};\nexport default StatusComponent;","import React, { Component } from \"react\";\nimport { string, func, shape, arrayOf, object, number } from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport StatusComponent from \"../components/status-component\";\nimport fetchStatuses from '../actions/status-action';\nimport styled from 'styled-components';\n\nconst Container = styled.section`\ndisplay: flex;\nmax-width: 40em;\nflex-direction: column;\n`;\nconst Wrapper = styled.div`\nwidth: 32em;\ndisplay: flex;\njustify-content: space-between;\n`;\nconst Heading = styled.h1`\nfont-size: 1.6em;\ncolor: \n`;\nclass StatusView extends Component {\n  \n  componentWillMount() {\n    this.props.dispatch(fetchStatuses())\n  }\n \n  render() {\n    return (\n      <Container>\n        <Heading>Statuses</Heading>\n        <Wrapper>\n        {this.props.data.map((item, i) => {\n          return <StatusComponent \n            key={i} \n            provider={item.provider}\n            pending={item.pending}\n            statuses={item.statuses}/>\n          })}\n        </Wrapper>\n      </Container>\n    );\n  }\n}\nStatusView.propTypes = {\n  dispatch: func.isRequired,\n  error: object,\n  data: arrayOf(\n    shape({\n      provider: string,\n      statuses: arrayOf(\n        shape({\n          name: string,\n          status: string,\n        })\n      ),\n    }),\n  )\n};\n\nStatusView.defaultProps = {\n  error: null,\n  data: null\n};\n\nconst mapStateToProps = state => {\n  return {\n    data: state.data,\n    error: state.error\n  };\n}\n\nexport default connect(mapStateToProps)(StatusView);","import React, { Component } from 'react';\nimport { node } from 'prop-types';\n\nclass ErrorBoundary extends Component {\n  state = { hasError: false, error: null };\n\n  componentDidCatch(error) {\n    this.setState({ hasError: true, error: error.message });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>{this.state.error}</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  children: node.isRequired,\n};\n\nexport default ErrorBoundary;","import React from \"react\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers/status-reducer\";\nimport StatusView from \"./views/status-view\";\nimport ErrorBoundary from './components/error';\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n\nconst store = createStore(\n  reducers, composeEnhancer(applyMiddleware(thunk)),\n);\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <ErrorBoundary>\n        <StatusView />\n        </ErrorBoundary>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}